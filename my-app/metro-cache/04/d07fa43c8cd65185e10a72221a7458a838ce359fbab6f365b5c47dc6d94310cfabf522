{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../../Text/Text","data":{"isAsync":false}},{"name":"../../UTFSequence","data":{"isAsync":false}},{"name":"../../Utilities/stringifySafe","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var React = _$$_REQUIRE(_dependencyMap[1], \"react\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[2], \"../../Text/Text\");\n\n  var UTFSequence = _$$_REQUIRE(_dependencyMap[3], \"../../UTFSequence\");\n\n  var stringifySafe = _$$_REQUIRE(_dependencyMap[4], \"../../Utilities/stringifySafe\");\n\n  var SUBSTITUTION = UTFSequence.BOM + '%s';\n  var YellowBoxCategory = {\n    parse: function parse(args) {\n      var categoryParts = [];\n      var contentParts = [];\n      var substitutionOffsets = [];\n\n      var remaining = _toConsumableArray(args);\n\n      if (typeof remaining[0] === 'string') {\n        var formatString = String(remaining.shift());\n        var formatStringParts = formatString.split('%s');\n        var substitutionCount = formatStringParts.length - 1;\n        var substitutions = remaining.splice(0, substitutionCount);\n        var categoryString = '';\n        var contentString = '';\n        var substitutionIndex = 0;\n\n        for (var _iterator = formatStringParts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var _formatStringPart = _ref;\n          categoryString += _formatStringPart;\n          contentString += _formatStringPart;\n\n          if (substitutionIndex < substitutionCount) {\n            if (substitutionIndex < substitutions.length) {\n              var substitution = stringifySafe(substitutions[substitutionIndex]);\n              substitutionOffsets.push({\n                length: substitution.length,\n                offset: contentString.length\n              });\n              categoryString += SUBSTITUTION;\n              contentString += substitution;\n            } else {\n              substitutionOffsets.push({\n                length: 2,\n                offset: contentString.length\n              });\n              categoryString += '%s';\n              contentString += '%s';\n            }\n\n            substitutionIndex++;\n          }\n        }\n\n        categoryParts.push(categoryString);\n        contentParts.push(contentString);\n      }\n\n      var remainingArgs = remaining.map(stringifySafe);\n      categoryParts.push.apply(categoryParts, _toConsumableArray(remainingArgs));\n      contentParts.push.apply(contentParts, _toConsumableArray(remainingArgs));\n      return {\n        category: categoryParts.join(' '),\n        message: {\n          content: contentParts.join(' '),\n          substitutions: substitutionOffsets\n        }\n      };\n    },\n    render: function render(_ref2, substitutionStyle) {\n      var content = _ref2.content,\n          substitutions = _ref2.substitutions;\n      var elements = [];\n      var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n        var key = String(index);\n\n        if (substitution.offset > prevOffset) {\n          var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n          elements.push(React.createElement(Text, {\n            key: key\n          }, prevPart));\n        }\n\n        var substititionPart = content.substr(substitution.offset, substitution.length);\n        elements.push(React.createElement(Text, {\n          key: key + '.5',\n          style: substitutionStyle\n        }, substititionPart));\n        return substitution.offset + substitution.length;\n      }, 0);\n\n      if (lastOffset < content.length) {\n        var lastPart = content.substr(lastOffset);\n        elements.push(React.createElement(Text, {\n          key: \"-1\"\n        }, lastPart));\n      }\n\n      return elements;\n    }\n  };\n  module.exports = YellowBoxCategory;\n});","map":[[2,0,11,0],[6,0,13,0],[6,6,13,6,"React"],[6,11,13,11],[6,14,13,14,"require"],[6,25,13,21],[6,53,13,0],[8,0,14,0],[8,6,14,6,"Text"],[8,10,14,10],[8,13,14,13,"require"],[8,24,14,20],[8,62,14,0],[10,0,15,0],[10,6,15,6,"UTFSequence"],[10,17,15,17],[10,20,15,20,"require"],[10,31,15,27],[10,71,15,0],[12,0,17,0],[12,6,17,6,"stringifySafe"],[12,19,17,19],[12,22,17,22,"require"],[12,33,17,29],[12,85,17,0],[14,0,32,0],[14,6,32,6,"SUBSTITUTION"],[14,18,32,18],[14,21,32,21,"UTFSequence"],[14,32,32,32],[14,33,32,33,"BOM"],[14,36,32,21],[14,39,32,39],[14,43,32,0],[15,0,34,0],[15,6,34,6,"YellowBoxCategory"],[15,23,34,23],[15,26,34,26],[16,0,35,2,"parse"],[16,4,35,2,"parse"],[16,9,34,26],[16,26,36,4,"args"],[16,30,34,26],[16,32,40,6],[17,0,41,4],[17,10,41,10,"categoryParts"],[17,23,41,23],[17,26,41,26],[17,28,41,4],[18,0,42,4],[18,10,42,10,"contentParts"],[18,22,42,22],[18,25,42,25],[18,27,42,4],[19,0,43,4],[19,10,43,10,"substitutionOffsets"],[19,29,43,29],[19,32,43,32],[19,34,43,4],[21,0,45,4],[21,10,45,10,"remaining"],[21,19,45,19],[21,41,45,26,"args"],[21,45,45,19],[21,46,45,4],[23,0,47,4],[23,10,47,8],[23,17,47,15,"remaining"],[23,26,47,24],[23,27,47,25],[23,28,47,24],[23,29,47,8],[23,34,47,32],[23,42,47,4],[23,44,47,42],[24,0,48,6],[24,12,48,12,"formatString"],[24,24,48,24],[24,27,48,27,"String"],[24,33,48,33],[24,34,48,34,"remaining"],[24,43,48,43],[24,44,48,44,"shift"],[24,49,48,34],[24,51,48,33],[24,52,48,6],[25,0,49,6],[25,12,49,12,"formatStringParts"],[25,29,49,29],[25,32,49,32,"formatString"],[25,44,49,44],[25,45,49,45,"split"],[25,50,49,32],[25,51,49,51],[25,55,49,32],[25,56,49,6],[26,0,50,6],[26,12,50,12,"substitutionCount"],[26,29,50,29],[26,32,50,32,"formatStringParts"],[26,49,50,49],[26,50,50,50,"length"],[26,56,50,32],[26,59,50,59],[26,60,50,6],[27,0,51,6],[27,12,51,12,"substitutions"],[27,25,51,25],[27,28,51,28,"remaining"],[27,37,51,37],[27,38,51,38,"splice"],[27,44,51,28],[27,45,51,45],[27,46,51,28],[27,48,51,48,"substitutionCount"],[27,65,51,28],[27,66,51,6],[28,0,53,6],[28,12,53,10,"categoryString"],[28,26,53,24],[28,29,53,27],[28,31,53,6],[29,0,54,6],[29,12,54,10,"contentString"],[29,25,54,23],[29,28,54,26],[29,30,54,6],[30,0,56,6],[30,12,56,10,"substitutionIndex"],[30,29,56,27],[30,32,56,30],[30,33,56,6],[32,0,57,6],[32,29,57,37,"formatStringParts"],[32,46,57,6],[32,206,57,56],[33,0,57,56],[35,0,57,56],[36,0,57,56],[37,0,57,56],[38,0,57,56],[39,0,57,56],[40,0,57,56],[41,0,57,56],[42,0,57,56],[44,0,57,56],[44,14,57,17,"formatStringPart"],[44,31,57,56],[45,0,58,8,"categoryString"],[45,10,58,8,"categoryString"],[45,24,58,22],[45,28,58,26,"formatStringPart"],[45,45,58,8],[46,0,59,8,"contentString"],[46,10,59,8,"contentString"],[46,23,59,21],[46,27,59,25,"formatStringPart"],[46,44,59,8],[48,0,61,8],[48,14,61,12,"substitutionIndex"],[48,31,61,29],[48,34,61,32,"substitutionCount"],[48,51,61,8],[48,53,61,51],[49,0,62,10],[49,16,62,14,"substitutionIndex"],[49,33,62,31],[49,36,62,34,"substitutions"],[49,49,62,47],[49,50,62,48,"length"],[49,56,62,10],[49,58,62,56],[50,0,63,12],[50,18,63,18,"substitution"],[50,30,63,30],[50,33,63,33,"stringifySafe"],[50,46,63,46],[50,47,64,14,"substitutions"],[50,60,64,27],[50,61,64,28,"substitutionIndex"],[50,78,64,27],[50,79,63,46],[50,80,63,12],[51,0,66,12,"substitutionOffsets"],[51,14,66,12,"substitutionOffsets"],[51,33,66,31],[51,34,66,32,"push"],[51,38,66,12],[51,39,66,37],[52,0,67,14,"length"],[52,16,67,14,"length"],[52,22,67,20],[52,24,67,22,"substitution"],[52,36,67,34],[52,37,67,35,"length"],[52,43,66,37],[53,0,68,14,"offset"],[53,16,68,14,"offset"],[53,22,68,20],[53,24,68,22,"contentString"],[53,37,68,35],[53,38,68,36,"length"],[54,0,66,37],[54,15,66,12],[55,0,71,12,"categoryString"],[55,14,71,12,"categoryString"],[55,28,71,26],[55,32,71,30,"SUBSTITUTION"],[55,44,71,12],[56,0,72,12,"contentString"],[56,14,72,12,"contentString"],[56,27,72,25],[56,31,72,29,"substitution"],[56,43,72,12],[57,0,73,11],[57,13,62,10],[57,19,73,17],[58,0,74,12,"substitutionOffsets"],[58,14,74,12,"substitutionOffsets"],[58,33,74,31],[58,34,74,32,"push"],[58,38,74,12],[58,39,74,37],[59,0,75,14,"length"],[59,16,75,14,"length"],[59,22,75,20],[59,24,75,22],[59,25,74,37],[60,0,76,14,"offset"],[60,16,76,14,"offset"],[60,22,76,20],[60,24,76,22,"contentString"],[60,37,76,35],[60,38,76,36,"length"],[61,0,74,37],[61,15,74,12],[62,0,79,12,"categoryString"],[62,14,79,12,"categoryString"],[62,28,79,26],[62,32,79,30],[62,36,79,12],[63,0,80,12,"contentString"],[63,14,80,12,"contentString"],[63,27,80,25],[63,31,80,29],[63,35,80,12],[64,0,81,11],[66,0,83,10,"substitutionIndex"],[66,12,83,10,"substitutionIndex"],[66,29,83,27],[67,0,84,9],[68,0,85,7],[70,0,87,6,"categoryParts"],[70,8,87,6,"categoryParts"],[70,21,87,19],[70,22,87,20,"push"],[70,26,87,6],[70,27,87,25,"categoryString"],[70,41,87,6],[71,0,88,6,"contentParts"],[71,8,88,6,"contentParts"],[71,20,88,18],[71,21,88,19,"push"],[71,25,88,6],[71,26,88,24,"contentString"],[71,39,88,6],[72,0,89,5],[74,0,91,4],[74,10,91,10,"remainingArgs"],[74,23,91,23],[74,26,91,26,"remaining"],[74,35,91,35],[74,36,91,36,"map"],[74,39,91,26],[74,40,91,40,"stringifySafe"],[74,53,91,26],[74,54,91,4],[75,0,92,4,"categoryParts"],[75,6,92,4,"categoryParts"],[75,19,92,17],[75,20,92,18,"push"],[75,24,92,4],[75,31,92,4,"categoryParts"],[75,44,92,17],[75,65,92,26,"remainingArgs"],[75,78,92,17],[75,80,92,4],[76,0,93,4,"contentParts"],[76,6,93,4,"contentParts"],[76,18,93,16],[76,19,93,17,"push"],[76,23,93,4],[76,30,93,4,"contentParts"],[76,42,93,16],[76,63,93,25,"remainingArgs"],[76,76,93,16],[76,78,93,4],[77,0,95,4],[77,13,95,11],[78,0,96,6,"category"],[78,8,96,6,"category"],[78,16,96,14],[78,18,96,16,"categoryParts"],[78,31,96,29],[78,32,96,30,"join"],[78,36,96,16],[78,37,96,35],[78,40,96,16],[78,41,95,11],[79,0,97,6,"message"],[79,8,97,6,"message"],[79,15,97,13],[79,17,97,15],[80,0,98,8,"content"],[80,10,98,8,"content"],[80,17,98,15],[80,19,98,17,"contentParts"],[80,31,98,29],[80,32,98,30,"join"],[80,36,98,17],[80,37,98,35],[80,40,98,17],[80,41,97,15],[81,0,99,8,"substitutions"],[81,10,99,8,"substitutions"],[81,23,99,21],[81,25,99,23,"substitutionOffsets"],[82,0,97,15],[83,0,95,11],[83,7,95,4],[84,0,102,3],[84,5,34,26],[85,0,104,2,"render"],[85,4,104,2,"render"],[85,10,34,26],[85,35,106,4,"substitutionStyle"],[85,52,34,26],[85,54,107,16],[86,0,107,16],[86,10,105,5,"content"],[86,17,107,16],[86,26,105,5,"content"],[86,33,107,16],[87,0,107,16],[87,10,105,14,"substitutions"],[87,23,107,16],[87,32,105,14,"substitutions"],[87,45,107,16],[88,0,108,4],[88,10,108,10,"elements"],[88,18,108,18],[88,21,108,21],[88,23,108,4],[89,0,110,4],[89,10,110,10,"lastOffset"],[89,20,110,20],[89,23,110,23,"substitutions"],[89,36,110,36],[89,37,110,37,"reduce"],[89,43,110,23],[89,44,111,6],[89,54,111,7,"prevOffset"],[89,64,111,6],[89,66,111,19,"substitution"],[89,78,111,6],[89,80,111,33,"index"],[89,85,111,6],[89,87,111,43],[90,0,112,8],[90,12,112,14,"key"],[90,15,112,17],[90,18,112,20,"String"],[90,24,112,26],[90,25,112,27,"index"],[90,30,112,26],[90,31,112,8],[92,0,114,8],[92,12,114,12,"substitution"],[92,24,114,24],[92,25,114,25,"offset"],[92,31,114,12],[92,34,114,34,"prevOffset"],[92,44,114,8],[92,46,114,46],[93,0,115,10],[93,14,115,16,"prevPart"],[93,22,115,24],[93,25,115,27,"content"],[93,32,115,34],[93,33,115,35,"substr"],[93,39,115,27],[93,40,116,12,"prevOffset"],[93,50,115,27],[93,52,117,12,"substitution"],[93,64,117,24],[93,65,117,25,"offset"],[93,71,117,12],[93,74,117,34,"prevOffset"],[93,84,115,27],[93,85,115,10],[94,0,119,10,"elements"],[94,10,119,10,"elements"],[94,18,119,18],[94,19,119,19,"push"],[94,23,119,10],[94,24,119,24],[94,44,119,25],[94,48,119,24],[95,0,119,30],[95,12,119,30],[95,15,119,33],[95,17,119,35,"key"],[96,0,119,24],[96,13,119,41,"prevPart"],[96,21,119,24],[96,22,119,10],[97,0,120,9],[99,0,122,8],[99,12,122,14,"substititionPart"],[99,28,122,30],[99,31,122,33,"content"],[99,38,122,40],[99,39,122,41,"substr"],[99,45,122,33],[99,46,123,10,"substitution"],[99,58,123,22],[99,59,123,23,"offset"],[99,65,122,33],[99,67,124,10,"substitution"],[99,79,124,22],[99,80,124,23,"length"],[99,86,122,33],[99,87,122,8],[100,0,126,8,"elements"],[100,8,126,8,"elements"],[100,16,126,16],[100,17,126,17,"push"],[100,21,126,8],[100,22,127,10],[100,42,127,11],[100,46,127,10],[101,0,127,16],[101,10,127,16],[101,13,127,19],[101,15,127,21,"key"],[101,18,127,24],[101,21,127,27],[101,25,127,10],[102,0,127,33],[102,10,127,33],[102,15,127,38],[102,17,127,40,"substitutionStyle"],[103,0,127,10],[103,11,128,13,"substititionPart"],[103,27,127,10],[103,28,126,8],[104,0,132,8],[104,15,132,15,"substitution"],[104,27,132,27],[104,28,132,28,"offset"],[104,34,132,15],[104,37,132,37,"substitution"],[104,49,132,49],[104,50,132,50,"length"],[104,56,132,8],[105,0,133,7],[105,7,110,23],[105,9,134,6],[105,10,110,23],[105,11,110,4],[107,0,137,4],[107,10,137,8,"lastOffset"],[107,20,137,18],[107,23,137,21,"content"],[107,30,137,28],[107,31,137,29,"length"],[107,37,137,4],[107,39,137,37],[108,0,138,6],[108,12,138,12,"lastPart"],[108,20,138,20],[108,23,138,23,"content"],[108,30,138,30],[108,31,138,31,"substr"],[108,37,138,23],[108,38,138,38,"lastOffset"],[108,48,138,23],[108,49,138,6],[109,0,139,6,"elements"],[109,8,139,6,"elements"],[109,16,139,14],[109,17,139,15,"push"],[109,21,139,6],[109,22,139,20],[109,42,139,21],[109,46,139,20],[110,0,139,26],[110,10,139,26],[110,13,139,29],[110,15,139,30],[111,0,139,20],[111,11,139,36,"lastPart"],[111,19,139,20],[111,20,139,6],[112,0,140,5],[114,0,142,4],[114,13,142,11,"elements"],[114,21,142,4],[115,0,143,3],[116,0,34,26],[116,3,34,0],[117,0,146,0,"module"],[117,2,146,0,"module"],[117,8,146,6],[117,9,146,7,"exports"],[117,16,146,0],[117,19,146,17,"YellowBoxCategory"],[117,36,146,0]]},"type":"js/module"}]}