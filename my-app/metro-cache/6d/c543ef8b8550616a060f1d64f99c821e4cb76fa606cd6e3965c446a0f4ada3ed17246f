{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"lodash.mapvalues","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Constants = exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"lodash.mapvalues\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[13], \"expo-core\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[14], \"react-native\");\n\n  var _class, _temp;\n\n  var _components = {\n    BarCodeScanner: {\n      displayName: \"BarCodeScanner\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/vanpen/School/my_app/my-app/node_modules/expo-barcode-scanner/src/BarCodeScanner.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ExpoBarCodeScannerModule = _expoCore.NativeModulesProxy.ExpoBarCodeScannerModule;\n  var EVENT_THROTTLE_MS = 500;\n\n  var BarCodeScanner = _wrapComponent(\"BarCodeScanner\")((_temp = _class = function (_React$Component) {\n    (0, _inherits2.default)(BarCodeScanner, _React$Component);\n\n    function BarCodeScanner(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, BarCodeScanner);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BarCodeScanner).call(this, props));\n\n      _this.setReference = function (ref) {\n        if (ref) {\n          _this.barCodeScannerRef = ref;\n          _this.barCodeScannerHandle = (0, _reactNative.findNodeHandle)(ref);\n        } else {\n          _this.barCodeScannerRef = null;\n          _this.barCodeScannerHandle = null;\n        }\n      };\n\n      _this.onObjectDetected = function (callback) {\n        return function (_ref) {\n          var nativeEvent = _ref.nativeEvent;\n          var type = nativeEvent.type;\n\n          if (_this.lastEvents[type] && _this.lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this.lastEvents[type] && new Date() - _this.lastEventsTimes[type] < EVENT_THROTTLE_MS) {\n            return;\n          }\n\n          if (callback) {\n            callback(nativeEvent);\n            _this.lastEventsTimes[type] = new Date();\n            _this.lastEvents[type] = JSON.stringify(nativeEvent);\n          }\n        };\n      };\n\n      _this.lastEvents = {};\n      _this.lastEventsTimes = {};\n      return _this;\n    }\n\n    (0, _createClass2.default)(BarCodeScanner, [{\n      key: \"render\",\n      value: function render() {\n        var nativeProps = this.convertNativeProps(this.props);\n        var _this$props = this.props,\n            onBarCodeScanned = _this$props.onBarCodeScanned,\n            onBarCodeRead = _this$props.onBarCodeRead;\n        return _react.default.createElement(ExpoBarCodeScannerView, (0, _extends2.default)({}, nativeProps, {\n          ref: this.setReference,\n          onBarCodeScanned: this.onObjectDetected(onBarCodeScanned || onBarCodeRead)\n        }));\n      }\n    }, {\n      key: \"convertNativeProps\",\n      value: function convertNativeProps(props) {\n        var newProps = (0, _lodash.default)(props, this.convertProp);\n        return newProps;\n      }\n    }, {\n      key: \"convertProp\",\n      value: function convertProp(value, key) {\n        if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n          return BarCodeScanner.ConversionTables[key][value];\n        }\n\n        return value;\n      }\n    }], [{\n      key: \"scanFromURLAsync\",\n      value: function scanFromURLAsync(url, barCodeTypes) {\n        var effectiveBarCodeTypes;\n        return _regenerator.default.async(function scanFromURLAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(Array.isArray(barCodeTypes) && barCodeTypes.length === 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('No barCodeTypes requested, provide at least one barCodeType for scanner');\n\n              case 2:\n                if (!(_reactNative.Platform.OS === 'ios')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                if (!(Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeScanner.Constants.BarCodeType.qr))) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n\n              case 5:\n                return _context.abrupt(\"return\", ExpoBarCodeScannerModule.scanFromURLAsync(url, [BarCodeScanner.Constants.BarCodeType.qr]));\n\n              case 6:\n                effectiveBarCodeTypes = barCodeTypes || Object.values(ExpoBarCodeScannerModule.BarCodeType);\n                return _context.abrupt(\"return\", ExpoBarCodeScannerModule.scanFromURLAsync(url, effectiveBarCodeTypes));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return BarCodeScanner;\n  }(_react.default.Component), _class.Constants = {\n    BarCodeType: ExpoBarCodeScannerModule.BarCodeType,\n    Type: ExpoBarCodeScannerModule.Type\n  }, _class.ConversionTables = {\n    type: ExpoBarCodeScannerModule.Type\n  }, _class.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {\n    onBarCodeScanned: _propTypes.default.func,\n    barCodeTypes: _propTypes.default.array,\n    type: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }), _class.defaultProps = {\n    type: ExpoBarCodeScannerModule.Type.back,\n    barCodeTypes: Object.values(ExpoBarCodeScannerModule.BarCodeType)\n  }, _temp));\n\n  var _default2 = BarCodeScanner;\n  exports.default = _default2;\n  var Constants = BarCodeScanner.Constants;\n  exports.Constants = Constants;\n  var ExpoBarCodeScannerView = (0, _expoCore.requireNativeViewManager)('ExpoBarCodeScannerView', BarCodeScanner);\n});","map":[[25,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[58,6,18,8,"ExpoBarCodeScannerModule"],[58,30],[58,33,18,37,"NativeModulesProxy"],[58,61],[58,62,18,8,"ExpoBarCodeScannerModule"],[58,86],[59,0,20,0],[59,6,20,6,"EVENT_THROTTLE_MS"],[59,23,20,23],[59,26,20,26],[59,29,20,0],[64,0,49,2],[64,28,49,14,"props"],[64,33,49,2],[64,35,49,28],[65,0,49,28],[67,0,49,28],[68,0,50,4],[68,118,50,10,"props"],[68,123,50,4],[70,0,49,28],[70,12,86,2,"setReference"],[70,24,49,28],[70,27,86,17],[70,37,86,18,"ref"],[70,40,86,17],[70,42,86,35],[71,0,87,4],[71,12,87,8,"ref"],[71,15,87,4],[71,17,87,13],[72,0,88,6],[72,16,88,11,"barCodeScannerRef"],[72,33,88,6],[72,36,88,31,"ref"],[72,39,88,6],[73,0,89,6],[73,16,89,11,"barCodeScannerHandle"],[73,36,89,6],[73,39,89,34],[73,72,89,49,"ref"],[73,75,89,34],[73,76,89,6],[74,0,90,5],[74,9,87,4],[74,15,90,11],[75,0,91,6],[75,16,91,11,"barCodeScannerRef"],[75,33,91,6],[75,36,91,31],[75,40,91,6],[76,0,92,6],[76,16,92,11,"barCodeScannerHandle"],[76,36,92,6],[76,39,92,34],[76,43,92,6],[77,0,93,5],[78,0,94,3],[78,7,49,28],[80,0,49,28],[80,12,96,2,"onObjectDetected"],[80,28,49,28],[80,31,96,21],[80,41,96,22,"callback"],[80,49,96,21],[81,0,96,21],[81,15,96,46],[81,31,96,95],[82,0,96,95],[82,14,96,49,"nativeEvent"],[82,25,96,95],[82,33,96,49,"nativeEvent"],[82,44,96,95],[83,0,96,95],[83,14,97,12,"type"],[83,18,96,95],[83,21,97,21,"nativeEvent"],[83,32,96,95],[83,33,97,12,"type"],[83,37,96,95],[85,0,98,4],[85,14,98,8],[85,20,98,13,"lastEvents"],[85,30,98,8],[85,31,98,24,"type"],[85,35,98,8],[85,40,99,6],[85,46,99,11,"lastEventsTimes"],[85,61,99,6],[85,62,99,27,"type"],[85,66,99,6],[85,67,98,8],[85,71,100,6,"JSON"],[85,75,100,10],[85,76,100,11,"stringify"],[85,85,100,6],[85,86,100,21,"nativeEvent"],[85,97,100,6],[85,103,100,38],[85,109,100,43,"lastEvents"],[85,119,100,38],[85,120,100,54,"type"],[85,124,100,38],[85,125,98,8],[85,129,101,6],[85,133,101,10,"Date"],[85,137,101,6],[85,142,101,19],[85,148,101,24,"lastEventsTimes"],[85,163,101,19],[85,164,101,40,"type"],[85,168,101,19],[85,169,101,6],[85,172,101,48,"EVENT_THROTTLE_MS"],[85,189,98,4],[85,191,102,6],[86,0,103,6],[87,0,104,5],[89,0,106,4],[89,14,106,8,"callback"],[89,22,106,4],[89,24,106,18],[90,0,107,6,"callback"],[90,12,107,6,"callback"],[90,20,107,14],[90,21,107,15,"nativeEvent"],[90,32,107,14],[90,33,107,6],[91,0,108,6],[91,18,108,11,"lastEventsTimes"],[91,33,108,6],[91,34,108,27,"type"],[91,38,108,6],[91,42,108,35],[91,46,108,39,"Date"],[91,50,108,35],[91,52,108,6],[92,0,109,6],[92,18,109,11,"lastEvents"],[92,28,109,6],[92,29,109,22,"type"],[92,33,109,6],[92,37,109,30,"JSON"],[92,41,109,34],[92,42,109,35,"stringify"],[92,51,109,30],[92,52,109,45,"nativeEvent"],[92,63,109,30],[92,64,109,6],[93,0,110,5],[94,0,111,3],[94,9,96,21],[95,0,96,21],[95,7,49,28],[97,0,51,4],[97,12,51,9,"lastEvents"],[97,22,51,4],[97,25,51,22],[97,27,51,4],[98,0,52,4],[98,12,52,9,"lastEventsTimes"],[98,27,52,4],[98,30,52,27],[98,32,52,4],[99,0,49,28],[100,0,53,3],[104,31,74,11],[105,0,75,4],[105,12,75,10,"nativeProps"],[105,23,75,21],[105,26,75,24],[105,31,75,29,"convertNativeProps"],[105,49,75,24],[105,50,75,48],[105,55,75,53,"props"],[105,60,75,24],[105,61,75,4],[106,0,74,11],[106,26,76,48],[106,31,76,53,"props"],[106,36,74,11],[107,0,74,11],[107,12,76,12,"onBarCodeScanned"],[107,28,74,11],[107,43,76,12,"onBarCodeScanned"],[107,59,74,11],[108,0,74,11],[108,12,76,30,"onBarCodeRead"],[108,25,74,11],[108,40,76,30,"onBarCodeRead"],[108,53,74,11],[109,0,77,4],[109,15,78,6],[109,44,78,7],[109,66,78,6],[109,95,79,12,"nativeProps"],[109,106,78,6],[110,0,80,8],[110,10,80,8],[110,13,80,11],[110,15,80,13],[110,20,80,18,"setReference"],[110,32,78,6],[111,0,81,8],[111,10,81,8],[111,26,81,24],[111,28,81,26],[111,33,81,31,"onObjectDetected"],[111,49,81,26],[111,50,81,48,"onBarCodeScanned"],[111,66,81,64],[111,70,81,68,"onBarCodeRead"],[111,83,81,26],[112,0,78,6],[112,11,77,4],[113,0,84,3],[116,41,113,21,"props"],[116,46],[116,48,113,35],[117,0,114,4],[117,12,114,10,"newProps"],[117,20,114,18],[117,23,114,21],[117,44,114,31,"props"],[117,49,114,21],[117,51,114,38],[117,56,114,43,"convertProp"],[117,67,114,21],[117,68,114,4],[118,0,115,4],[118,15,115,11,"newProps"],[118,23,115,4],[119,0,116,3],[122,34,118,14,"value"],[122,39],[122,41,118,24,"key"],[122,44],[122,46,118,40],[123,0,119,4],[123,12,119,8],[123,19,119,15,"value"],[123,24,119,8],[123,29,119,25],[123,37,119,8],[123,41,119,37,"BarCodeScanner"],[123,55,119,51],[123,56,119,52,"ConversionTables"],[123,72,119,37],[123,73,119,69,"key"],[123,76,119,37],[123,77,119,4],[123,79,119,75],[124,0,120,6],[124,17,120,13,"BarCodeScanner"],[124,31,120,27],[124,32,120,28,"ConversionTables"],[124,48,120,13],[124,49,120,45,"key"],[124,52,120,13],[124,54,120,50,"value"],[124,59,120,13],[124,60,120,6],[125,0,121,5],[127,0,122,4],[127,15,122,11,"value"],[127,20,122,4],[128,0,123,3],[131,39,55,32,"url"],[131,42],[131,44,55,45,"barCodeTypes"],[131,56],[137,22,56,8,"Array"],[137,27,56,13],[137,28,56,14,"isArray"],[137,35,56,8],[137,36,56,22,"barCodeTypes"],[137,48,56,8],[137,53,56,39,"barCodeTypes"],[137,65,56,51],[137,66,56,52,"length"],[137,72,56,39],[137,77,56,63],[137,78],[142,22,57,12],[142,26,57,16,"Error"],[142,31,57,12],[142,32,57,22],[142,105,57,12],[142,106],[145,22,60,8,"Platform"],[145,44,60,17,"OS"],[145,46,60,8],[145,51,60,24],[145,56],[150,22,61,10,"Array"],[150,27,61,15],[150,28,61,16,"isArray"],[150,35,61,10],[150,36,61,24,"barCodeTypes"],[150,48,61,10],[150,53,61,41],[150,54,61,42,"barCodeTypes"],[150,66,61,54],[150,67,61,55,"includes"],[150,75,61,42],[150,76,61,64,"BarCodeScanner"],[150,90,61,78],[150,91,61,79,"Constants"],[150,100,61,64],[150,101,61,89,"BarCodeType"],[150,112,61,64],[150,113,61,101,"qr"],[150,115,61,42],[150,116],[155,22,63,14],[155,26,63,18,"Error"],[155,31,63,14],[155,32,63,24],[155,88,63,14],[155,89],[158,49,66,13,"ExpoBarCodeScannerModule"],[158,73,66,37],[158,74,66,38,"scanFromURLAsync"],[158,90,66,13],[158,91,66,55,"url"],[158,94,66,13],[158,96,66,60],[158,97,66,61,"BarCodeScanner"],[158,111,66,75],[158,112,66,76,"Constants"],[158,121,66,61],[158,122,66,86,"BarCodeType"],[158,133,66,61],[158,134,66,98,"qr"],[158,136,66,60],[158,137,66,13],[158,138],[161,0,70,10,"effectiveBarCodeTypes"],[161,16,70,10,"effectiveBarCodeTypes"],[161,37],[161,40,70,34,"barCodeTypes"],[161,52,70,46],[161,56,70,50,"Object"],[161,62,70,56],[161,63,70,57,"values"],[161,69,70,50],[161,70,70,64,"ExpoBarCodeScannerModule"],[161,94,70,88],[161,95,70,89,"BarCodeType"],[161,106,70,50],[161,107],[162,49,71,11,"ExpoBarCodeScannerModule"],[162,73,71,35],[162,74,71,36,"scanFromURLAsync"],[162,90,71,11],[162,91,71,53,"url"],[162,94,71,11],[162,96,71,58,"effectiveBarCodeTypes"],[162,117,71,11],[162,118],[173,4,22,44,"React"],[173,19,22,50,"Component"],[173,28],[173,38,28,9,"Constants"],[173,47],[173,50,28,21],[174,0,29,4,"BarCodeType"],[174,4,29,4,"BarCodeType"],[174,15,29,15],[174,17,29,17,"ExpoBarCodeScannerModule"],[174,41,29,41],[174,42,29,42,"BarCodeType"],[174,53,28,21],[175,0,30,4,"Type"],[175,4,30,4,"Type"],[175,8,30,8],[175,10,30,10,"ExpoBarCodeScannerModule"],[175,34,30,34],[175,35,30,35,"Type"],[176,0,28,21],[176,3],[176,12,33,9,"ConversionTables"],[176,28],[176,31,33,28],[177,0,34,4,"type"],[177,4,34,4,"type"],[177,8,34,8],[177,10,34,10,"ExpoBarCodeScannerModule"],[177,34,34,34],[177,35,34,35,"Type"],[178,0,33,28],[178,3],[178,12,37,9,"propTypes"],[178,21],[178,56,38,7,"ViewPropTypes"],[178,82],[179,0,39,4,"onBarCodeScanned"],[179,4,39,4,"onBarCodeScanned"],[179,20,39,20],[179,22,39,22,"PropTypes"],[179,41,39,32,"func"],[179,45],[180,0,40,4,"barCodeTypes"],[180,4,40,4,"barCodeTypes"],[180,16,40,16],[180,18,40,18,"PropTypes"],[180,37,40,28,"array"],[180,42],[181,0,41,4,"type"],[181,4,41,4,"type"],[181,8,41,8],[181,10,41,10,"PropTypes"],[181,29,41,20,"oneOfType"],[181,38,41,10],[181,39,41,30],[181,40,41,31,"PropTypes"],[181,59,41,41,"string"],[181,65,41,30],[181,67,41,49,"PropTypes"],[181,86,41,59,"number"],[181,92,41,30],[181,93,41,10],[182,13,44,9,"defaultProps"],[182,25],[182,28,44,24],[183,0,45,4,"type"],[183,4,45,4,"type"],[183,8,45,8],[183,10,45,10,"ExpoBarCodeScannerModule"],[183,34,45,34],[183,35,45,35,"Type"],[183,39,45,10],[183,40,45,40,"back"],[183,44,44,24],[184,0,46,4,"barCodeTypes"],[184,4,46,4,"barCodeTypes"],[184,16,46,16],[184,18,46,18,"Object"],[184,24,46,24],[184,25,46,25,"values"],[184,31,46,18],[184,32,46,32,"ExpoBarCodeScannerModule"],[184,56,46,56],[184,57,46,57,"BarCodeType"],[184,68,46,18],[185,0,44,24],[185,3],[189,0,126,7],[189,6,126,13,"Constants"],[189,15,126,22],[189,18,126,25,"BarCodeScanner"],[189,32,126,39],[189,33,126,40,"Constants"],[189,42,126,7],[191,0,128,0],[191,6,128,6,"ExpoBarCodeScannerView"],[191,28,128,28],[191,31,128,31],[191,71,128,56],[191,95,128,31],[191,97,128,82,"BarCodeScanner"],[191,111,128,31],[191,112,128,0]]},"type":"js/module"}]}