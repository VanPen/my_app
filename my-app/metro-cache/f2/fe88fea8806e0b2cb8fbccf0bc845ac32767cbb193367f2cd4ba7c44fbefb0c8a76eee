{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"lodash/isEqual","data":{"isAsync":false}},{"name":"lodash/pick","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createToolbarAndroidComponent;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./../../../../../react-transform-hmr/lib/index.js\"));\n\n  var _isEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"lodash/isEqual\"));\n\n  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"lodash/pick\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"./react-native\");\n\n  var _components = {\n    IconToolbarAndroid: {\n      displayName: \"IconToolbarAndroid\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/vanpen/School/my_app/my-app/node_modules/@expo/vector-icons/vendor/react-native-vector-icons/lib/toolbar-android.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\n  var LOGO_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['logoName']);\n  var NAV_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['navIconName']);\n  var OVERFLOW_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['overflowIconName']);\n  var ACTIONS_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['actions']);\n\n  var arePropsEqual = function arePropsEqual(keys) {\n    return function (prevProps, nextProps) {\n      return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));\n    };\n  };\n\n  var areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\n  var areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\n  var areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\n  var areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\n\n  function createToolbarAndroidComponent(IconNamePropType, getImageSource) {\n    var _class, _temp;\n\n    return _wrapComponent(\"IconToolbarAndroid\")((_temp = _class = function (_PureComponent) {\n      (0, _inherits2.default)(IconToolbarAndroid, _PureComponent);\n\n      function IconToolbarAndroid() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        (0, _classCallCheck2.default)(this, IconToolbarAndroid);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(IconToolbarAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          logo: undefined,\n          navIcon: undefined,\n          overflowIcon: undefined,\n          actions: undefined\n        };\n        return _this;\n      }\n\n      (0, _createClass2.default)(IconToolbarAndroid, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.updateLogoIconSource();\n          this.updateNavIconSource();\n          this.updateOverflowIconSource();\n          this.updateActionIconSources();\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!areLogoIconPropsEqual(prevProps, this.props)) {\n            this.updateLogoIconSource();\n          }\n\n          if (!areNavIconPropsEqual(prevProps, this.props)) {\n            this.updateNavIconSource();\n          }\n\n          if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n            this.updateOverflowIconSource();\n          }\n\n          if (!areActionPropsEqual(prevProps, this.props)) {\n            this.updateActionIconSources();\n          }\n        }\n      }, {\n        key: \"updateLogoIconSource\",\n        value: function updateLogoIconSource() {\n          var _this$props, logoName, iconSize, iconColor, titleColor, logo;\n\n          return _regenerator.default.async(function updateLogoIconSource$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, logoName = _this$props.logoName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor, titleColor = _this$props.titleColor;\n\n                  if (!logoName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return _regenerator.default.awrap(getImageSource(logoName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  logo = _context.sent;\n                  this.setState({\n                    logo: logo\n                  });\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.logo) {\n                    this.setState({\n                      logo: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateNavIconSource\",\n        value: function updateNavIconSource() {\n          var _this$props2, navIconName, iconSize, iconColor, titleColor, navIcon;\n\n          return _regenerator.default.async(function updateNavIconSource$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, navIconName = _this$props2.navIconName, iconSize = _this$props2.iconSize, iconColor = _this$props2.iconColor, titleColor = _this$props2.titleColor;\n\n                  if (!navIconName) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return _regenerator.default.awrap(getImageSource(navIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  navIcon = _context2.sent;\n                  this.setState({\n                    navIcon: navIcon\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.navIcon) {\n                    this.setState({\n                      navIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateOverflowIconSource\",\n        value: function updateOverflowIconSource() {\n          var _this$props3, overflowIconName, iconSize, iconColor, titleColor, overflowIcon;\n\n          return _regenerator.default.async(function updateOverflowIconSource$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this$props3 = this.props, overflowIconName = _this$props3.overflowIconName, iconSize = _this$props3.iconSize, iconColor = _this$props3.iconColor, titleColor = _this$props3.titleColor;\n\n                  if (!overflowIconName) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return _regenerator.default.awrap(getImageSource(overflowIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  overflowIcon = _context3.sent;\n                  this.setState({\n                    overflowIcon: overflowIcon\n                  });\n                  _context3.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.overflowIcon) {\n                    this.setState({\n                      overflowIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateActionIconSources\",\n        value: function updateActionIconSources() {\n          var _this$props4, actions, iconSize, iconColor, titleColor, updatedActions;\n\n          return _regenerator.default.async(function updateActionIconSources$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this$props4 = this.props, actions = _this$props4.actions, iconSize = _this$props4.iconSize, iconColor = _this$props4.iconColor, titleColor = _this$props4.titleColor;\n                  _context4.next = 3;\n                  return _regenerator.default.awrap(Promise.all((actions || []).map(function (action) {\n                    if (action.iconName) {\n                      return getImageSource(action.iconName, action.iconSize || iconSize, action.iconColor || iconColor || titleColor).then(function (icon) {\n                        return (0, _objectSpread2.default)({}, action, {\n                          icon: icon\n                        });\n                      });\n                    }\n\n                    return Promise.resolve(action);\n                  })));\n\n                case 3:\n                  updatedActions = _context4.sent;\n                  this.setState({\n                    actions: updatedActions\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(_reactNative.ToolbarAndroid, (0, _extends2.default)({}, this.props, this.state));\n        }\n      }]);\n      return IconToolbarAndroid;\n    }(_react.PureComponent), _class.propTypes = {\n      logoName: IconNamePropType,\n      navIconName: IconNamePropType,\n      overflowIconName: IconNamePropType,\n      actions: _propTypes.default.arrayOf(_propTypes.default.shape({\n        title: _propTypes.default.string.isRequired,\n        iconName: IconNamePropType,\n        iconSize: _propTypes.default.number,\n        iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n        show: _propTypes.default.oneOf(['always', 'ifRoom', 'never']),\n        showWithText: _propTypes.default.bool\n      })),\n      iconSize: _propTypes.default.number,\n      iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      titleColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n    }, _class.defaultProps = {\n      iconSize: 24\n    }, _temp));\n  }\n});","map":[[27,0,4,0],[31,0,2,0],[33,0,3,0],[35,0,5,0],[37,0,6,0],[59,0,8,0],[59,6,8,6,"ICON_PROP_NAMES"],[59,21,8,21],[59,24,8,24],[59,25,8,25],[59,35,8,24],[59,37,8,37],[59,48,8,24],[59,50,8,50],[59,62,8,24],[59,63,8,0],[60,0,9,0],[60,6,9,6,"LOGO_ICON_PROP_NAMES"],[60,26,9,26],[60,39,9,33,"ICON_PROP_NAMES"],[60,54,9,26],[60,57,9,50],[60,67,9,26],[60,69,9,0],[61,0,10,0],[61,6,10,6,"NAV_ICON_PROP_NAMES"],[61,25,10,25],[61,38,10,32,"ICON_PROP_NAMES"],[61,53,10,25],[61,56,10,49],[61,69,10,25],[61,71,10,0],[62,0,11,0],[62,6,11,6,"OVERFLOW_ICON_PROP_NAMES"],[62,30,11,30],[62,43,11,37,"ICON_PROP_NAMES"],[62,58,11,30],[62,61,11,54],[62,79,11,30],[62,81,11,0],[63,0,12,0],[63,6,12,6,"ACTIONS_PROP_NAMES"],[63,24,12,24],[63,37,12,31,"ICON_PROP_NAMES"],[63,52,12,24],[63,55,12,48],[63,64,12,24],[63,66,12,0],[65,0,14,0],[65,6,14,6,"arePropsEqual"],[65,19,14,19],[65,22,14,22],[65,31,14,6,"arePropsEqual"],[65,44,14,22],[65,45,14,22,"keys"],[65,49,14,26],[66,0,14,26],[66,11,14,30],[66,21,14,31,"prevProps"],[66,30,14,30],[66,32,14,42,"nextProps"],[66,41,14,30],[67,0,14,30],[67,13,15,2],[67,35,15,10],[67,54,15,15,"prevProps"],[67,63,15,10],[67,65,15,26,"keys"],[67,69,15,10],[67,70,15,2],[67,72,15,33],[67,91,15,38,"nextProps"],[67,100,15,33],[67,102,15,49,"keys"],[67,106,15,33],[67,107,15,2],[67,108,14,30],[68,0,14,30],[68,5,14,26],[69,0,14,26],[69,3,14,0],[71,0,17,0],[71,6,17,6,"areLogoIconPropsEqual"],[71,27,17,27],[71,30,17,30,"arePropsEqual"],[71,43,17,43],[71,44,17,44,"LOGO_ICON_PROP_NAMES"],[71,64,17,43],[71,65,17,0],[72,0,18,0],[72,6,18,6,"areNavIconPropsEqual"],[72,26,18,26],[72,29,18,29,"arePropsEqual"],[72,42,18,42],[72,43,18,43,"NAV_ICON_PROP_NAMES"],[72,62,18,42],[72,63,18,0],[73,0,19,0],[73,6,19,6,"areOverflowIconPropsEqual"],[73,31,19,31],[73,34,19,34,"arePropsEqual"],[73,47,19,47],[73,48,19,48,"OVERFLOW_ICON_PROP_NAMES"],[73,72,19,47],[73,73,19,0],[74,0,20,0],[74,6,20,6,"areActionPropsEqual"],[74,25,20,25],[74,28,20,28,"arePropsEqual"],[74,41,20,41],[74,42,20,42,"ACTIONS_PROP_NAMES"],[74,60,20,41],[74,61,20,0],[76,0,22,15],[76,11,22,24,"createToolbarAndroidComponent"],[76,40,22,15],[76,41,23,2,"IconNamePropType"],[76,57,22,15],[76,59,24,2,"getImageSource"],[76,73,22,15],[76,75,25,2],[77,0,25,2],[79,0,26,2],[80,0,26,2],[82,0,26,2],[83,0,26,2],[85,0,26,2],[87,0,26,2],[89,0,26,2],[90,0,26,2],[91,0,26,2],[93,0,26,2],[94,0,26,2],[94,14,50,4,"state"],[94,19,26,2],[94,22,50,12],[95,0,51,6,"logo"],[95,10,51,6,"logo"],[95,14,51,10],[95,16,51,12,"undefined"],[95,25,50,12],[96,0,52,6,"navIcon"],[96,10,52,6,"navIcon"],[96,17,52,13],[96,19,52,15,"undefined"],[96,28,50,12],[97,0,53,6,"overflowIcon"],[97,10,53,6,"overflowIcon"],[97,22,53,18],[97,24,53,20,"undefined"],[97,33,50,12],[98,0,54,6,"actions"],[98,10,54,6,"actions"],[98,17,54,13],[98,19,54,15,"undefined"],[99,0,50,12],[99,9,26,2],[100,0,26,2],[101,0,26,2],[103,0,26,2],[104,0,26,2],[105,0,26,2],[105,44,57,24],[106,0,58,6],[106,15,58,11,"updateLogoIconSource"],[106,35,58,6],[107,0,59,6],[107,15,59,11,"updateNavIconSource"],[107,34,59,6],[108,0,60,6],[108,15,60,11,"updateOverflowIconSource"],[108,39,60,6],[109,0,61,6],[109,15,61,11,"updateActionIconSources"],[109,38,61,6],[110,0,62,5],[111,0,26,2],[112,0,26,2],[113,0,26,2],[113,43,64,23,"prevProps"],[113,52,26,2],[113,54,64,34],[114,0,65,6],[114,14,65,10],[114,15,65,11,"areLogoIconPropsEqual"],[114,36,65,32],[114,37,65,33,"prevProps"],[114,46,65,32],[114,48,65,44],[114,53,65,49,"props"],[114,58,65,32],[114,59,65,6],[114,61,65,57],[115,0,66,8],[115,17,66,13,"updateLogoIconSource"],[115,37,66,8],[116,0,67,7],[118,0,68,6],[118,14,68,10],[118,15,68,11,"areNavIconPropsEqual"],[118,35,68,31],[118,36,68,32,"prevProps"],[118,45,68,31],[118,47,68,43],[118,52,68,48,"props"],[118,57,68,31],[118,58,68,6],[118,60,68,56],[119,0,69,8],[119,17,69,13,"updateNavIconSource"],[119,36,69,8],[120,0,70,7],[122,0,71,6],[122,14,71,10],[122,15,71,11,"areOverflowIconPropsEqual"],[122,40,71,36],[122,41,71,37,"prevProps"],[122,50,71,36],[122,52,71,48],[122,57,71,53,"props"],[122,62,71,36],[122,63,71,6],[122,65,71,61],[123,0,72,8],[123,17,72,13,"updateOverflowIconSource"],[123,41,72,8],[124,0,73,7],[126,0,74,6],[126,14,74,10],[126,15,74,11,"areActionPropsEqual"],[126,34,74,30],[126,35,74,31,"prevProps"],[126,44,74,30],[126,46,74,42],[126,51,74,47,"props"],[126,56,74,30],[126,57,74,6],[126,59,74,55],[127,0,75,8],[127,17,75,13,"updateActionIconSources"],[127,40,75,8],[128,0,76,7],[129,0,77,5],[130,0,26,2],[131,0,26,2],[132,0,26,2],[133,0,26,2],[135,0,26,2],[136,0,26,2],[137,0,26,2],[138,0,26,2],[139,0,26,2],[139,32,80,60],[139,37,80,65,"props"],[139,42,26,2],[139,44,80,14,"logoName"],[139,52,26,2],[139,67,80,14,"logoName"],[139,75,26,2],[139,77,80,24,"iconSize"],[139,85,26,2],[139,100,80,24,"iconSize"],[139,108,26,2],[139,110,80,34,"iconColor"],[139,119,26,2],[139,134,80,34,"iconColor"],[139,143,26,2],[139,145,80,45,"titleColor"],[139,155,26,2],[139,170,80,45,"titleColor"],[139,180,26,2],[141,0,26,2],[141,23,81,10,"logoName"],[141,31,26,2],[142,0,26,2],[143,0,26,2],[144,0,26,2],[146,0,26,2],[147,0,26,2],[147,52,82,27,"getImageSource"],[147,66,82,41],[147,67,83,10,"logoName"],[147,75,82,41],[147,77,84,10,"iconSize"],[147,85,82,41],[147,87,85,10,"iconColor"],[147,96,85,19],[147,100,85,23,"titleColor"],[147,110,82,41],[147,111,26,2],[149,0,26,2],[150,0,82,14,"logo"],[150,18,82,14,"logo"],[150,22,26,2],[151,0,87,8],[151,23,87,13,"setState"],[151,31,87,8],[151,32,87,22],[152,0,87,24,"logo"],[152,20,87,24,"logo"],[152,24,87,28],[152,26,87,24,"logo"],[153,0,87,22],[153,19,87,8],[154,0,26,2],[155,0,26,2],[157,0,26,2],[158,0,89,13],[158,22,89,17],[158,27,89,22,"state"],[158,32,89,17],[158,33,89,28,"logo"],[158,37,89,13],[158,39,89,34],[159,0,90,8],[159,25,90,13,"setState"],[159,33,90,8],[159,34,90,22],[160,0,90,24,"logo"],[160,22,90,24,"logo"],[160,26,90,28],[160,28,90,30,"undefined"],[161,0,90,22],[161,21,90,8],[162,0,91,7],[164,0,26,2],[165,0,26,2],[166,0,26,2],[167,0,26,2],[168,0,26,2],[169,0,26,2],[170,0,26,2],[171,0,26,2],[172,0,26,2],[173,0,26,2],[174,0,26,2],[176,0,26,2],[177,0,26,2],[178,0,26,2],[179,0,26,2],[180,0,26,2],[180,33,95,63],[180,38,95,68,"props"],[180,43,26,2],[180,45,95,14,"navIconName"],[180,56,26,2],[180,72,95,14,"navIconName"],[180,83,26,2],[180,85,95,27,"iconSize"],[180,93,26,2],[180,109,95,27,"iconSize"],[180,117,26,2],[180,119,95,37,"iconColor"],[180,128,26,2],[180,144,95,37,"iconColor"],[180,153,26,2],[180,155,95,48,"titleColor"],[180,165,26,2],[180,181,95,48,"titleColor"],[180,191,26,2],[182,0,26,2],[182,23,96,10,"navIconName"],[182,34,26,2],[183,0,26,2],[184,0,26,2],[185,0,26,2],[187,0,26,2],[188,0,26,2],[188,52,97,30,"getImageSource"],[188,66,97,44],[188,67,98,10,"navIconName"],[188,78,97,44],[188,80,99,10,"iconSize"],[188,88,97,44],[188,90,100,10,"iconColor"],[188,99,100,19],[188,103,100,23,"titleColor"],[188,113,97,44],[188,114,26,2],[190,0,26,2],[191,0,97,14,"navIcon"],[191,18,97,14,"navIcon"],[191,25,26,2],[192,0,102,8],[192,23,102,13,"setState"],[192,31,102,8],[192,32,102,22],[193,0,102,24,"navIcon"],[193,20,102,24,"navIcon"],[193,27,102,31],[193,29,102,24,"navIcon"],[194,0,102,22],[194,19,102,8],[195,0,26,2],[196,0,26,2],[198,0,26,2],[199,0,104,13],[199,22,104,17],[199,27,104,22,"state"],[199,32,104,17],[199,33,104,28,"navIcon"],[199,40,104,13],[199,42,104,37],[200,0,105,8],[200,25,105,13,"setState"],[200,33,105,8],[200,34,105,22],[201,0,105,24,"navIcon"],[201,22,105,24,"navIcon"],[201,29,105,31],[201,31,105,33,"undefined"],[202,0,105,22],[202,21,105,8],[203,0,106,7],[205,0,26,2],[206,0,26,2],[207,0,26,2],[208,0,26,2],[209,0,26,2],[210,0,26,2],[211,0,26,2],[212,0,26,2],[213,0,26,2],[214,0,26,2],[215,0,26,2],[217,0,26,2],[218,0,26,2],[219,0,26,2],[220,0,26,2],[221,0,26,2],[221,33,110,68],[221,38,110,73,"props"],[221,43,26,2],[221,45,110,14,"overflowIconName"],[221,61,26,2],[221,77,110,14,"overflowIconName"],[221,93,26,2],[221,95,110,32,"iconSize"],[221,103,26,2],[221,119,110,32,"iconSize"],[221,127,26,2],[221,129,110,42,"iconColor"],[221,138,26,2],[221,154,110,42,"iconColor"],[221,163,26,2],[221,165,110,53,"titleColor"],[221,175,26,2],[221,191,110,53,"titleColor"],[221,201,26,2],[223,0,26,2],[223,23,111,10,"overflowIconName"],[223,39,26,2],[224,0,26,2],[225,0,26,2],[226,0,26,2],[228,0,26,2],[229,0,26,2],[229,52,112,35,"getImageSource"],[229,66,112,49],[229,67,113,10,"overflowIconName"],[229,83,112,49],[229,85,114,10,"iconSize"],[229,93,112,49],[229,95,115,10,"iconColor"],[229,104,115,19],[229,108,115,23,"titleColor"],[229,118,112,49],[229,119,26,2],[231,0,26,2],[232,0,112,14,"overflowIcon"],[232,18,112,14,"overflowIcon"],[232,30,26,2],[233,0,117,8],[233,23,117,13,"setState"],[233,31,117,8],[233,32,117,22],[234,0,117,24,"overflowIcon"],[234,20,117,24,"overflowIcon"],[234,32,117,36],[234,34,117,24,"overflowIcon"],[235,0,117,22],[235,19,117,8],[236,0,26,2],[237,0,26,2],[239,0,26,2],[240,0,119,13],[240,22,119,17],[240,27,119,22,"state"],[240,32,119,17],[240,33,119,28,"overflowIcon"],[240,45,119,13],[240,47,119,42],[241,0,120,8],[241,25,120,13,"setState"],[241,33,120,8],[241,34,120,22],[242,0,120,24,"overflowIcon"],[242,22,120,24,"overflowIcon"],[242,34,120,36],[242,36,120,38,"undefined"],[243,0,120,22],[243,21,120,8],[244,0,121,7],[246,0,26,2],[247,0,26,2],[248,0,26,2],[249,0,26,2],[250,0,26,2],[251,0,26,2],[252,0,26,2],[253,0,26,2],[254,0,26,2],[255,0,26,2],[256,0,26,2],[258,0,26,2],[259,0,26,2],[260,0,26,2],[261,0,26,2],[262,0,26,2],[262,33,125,59],[262,38,125,64,"props"],[262,43,26,2],[262,45,125,14,"actions"],[262,52,26,2],[262,68,125,14,"actions"],[262,75,26,2],[262,77,125,23,"iconSize"],[262,85,26,2],[262,101,125,23,"iconSize"],[262,109,26,2],[262,111,125,33,"iconColor"],[262,120,26,2],[262,136,125,33,"iconColor"],[262,145,26,2],[262,147,125,44,"titleColor"],[262,157,26,2],[262,173,125,44,"titleColor"],[262,183,26,2],[263,0,26,2],[264,0,26,2],[264,52,126,35,"Promise"],[264,59,126,42],[264,60,126,43,"all"],[264,63,126,35],[264,64,127,8],[264,65,127,9,"actions"],[264,72,127,16],[264,76,127,20],[264,78,127,8],[264,80,127,24,"map"],[264,83,127,8],[264,84,127,28],[264,94,127,28,"action"],[264,100,127,34],[264,102,127,38],[265,0,128,10],[265,24,128,14,"action"],[265,30,128,20],[265,31,128,21,"iconName"],[265,39,128,10],[265,41,128,31],[266,0,129,12],[266,29,129,19,"getImageSource"],[266,43,129,33],[266,44,130,14,"action"],[266,50,130,20],[266,51,130,21,"iconName"],[266,59,129,33],[266,61,131,14,"action"],[266,67,131,20],[266,68,131,21,"iconSize"],[266,76,131,14],[266,80,131,33,"iconSize"],[266,88,129,33],[266,90,132,14,"action"],[266,96,132,20],[266,97,132,21,"iconColor"],[266,106,132,14],[266,110,132,34,"iconColor"],[266,119,132,14],[266,123,132,47,"titleColor"],[266,133,129,33],[266,134,129,19],[266,135,133,14,"then"],[266,139,129,19],[266,140,133,19],[266,150,133,19,"icon"],[266,154,133,23],[267,0,133,23],[267,63,133,33,"action"],[267,69,133,23],[268,0,133,41,"icon"],[268,26,133,41,"icon"],[268,30,133,45],[268,32,133,41,"icon"],[269,0,133,23],[270,0,133,23],[270,23,129,19],[270,24,129,12],[271,0,134,11],[273,0,135,10],[273,27,135,17,"Promise"],[273,34,135,24],[273,35,135,25,"resolve"],[273,42,135,17],[273,43,135,33,"action"],[273,49,135,17],[273,50,135,10],[274,0,136,9],[274,19,127,8],[274,20,126,35],[274,21,26,2],[276,0,26,2],[277,0,126,12,"updatedActions"],[277,18,126,12,"updatedActions"],[277,32,26,2],[278,0,138,6],[278,23,138,11,"setState"],[278,31,138,6],[278,32,138,20],[279,0,138,22,"actions"],[279,20,138,22,"actions"],[279,27,138,29],[279,29,138,31,"updatedActions"],[280,0,138,20],[280,19,138,6],[282,0,26,2],[283,0,26,2],[284,0,26,2],[285,0,26,2],[286,0,26,2],[287,0,26,2],[288,0,26,2],[289,0,26,2],[290,0,26,2],[291,0,26,2],[291,33,141,13],[292,0,142,6],[292,17,142,13],[292,46,142,14],[292,73,142,13],[292,102,142,33],[292,107,142,38,"props"],[292,112,142,13],[292,114,142,49],[292,119,142,54,"state"],[292,124,142,13],[292,126,142,6],[293,0,143,5],[294,0,26,2],[295,0,26,2],[296,0,26,2],[296,6,26,42,"PureComponent"],[296,26,26,2],[296,36,27,11,"propTypes"],[296,45,26,2],[296,48,27,23],[297,0,28,6,"logoName"],[297,6,28,6,"logoName"],[297,14,28,14],[297,16,28,16,"IconNamePropType"],[297,32,27,23],[298,0,29,6,"navIconName"],[298,6,29,6,"navIconName"],[298,17,29,17],[298,19,29,19,"IconNamePropType"],[298,35,27,23],[299,0,30,6,"overflowIconName"],[299,6,30,6,"overflowIconName"],[299,22,30,22],[299,24,30,24,"IconNamePropType"],[299,40,27,23],[300,0,31,6,"actions"],[300,6,31,6,"actions"],[300,13,31,13],[300,15,31,15,"PropTypes"],[300,34,31,25,"arrayOf"],[300,41,31,15],[300,42,32,8,"PropTypes"],[300,61,32,18,"shape"],[300,66,32,8],[300,67,32,24],[301,0,33,10,"title"],[301,8,33,10,"title"],[301,13,33,15],[301,15,33,17,"PropTypes"],[301,34,33,27,"string"],[301,40,33,17],[301,41,33,34,"isRequired"],[301,51,32,24],[302,0,34,10,"iconName"],[302,8,34,10,"iconName"],[302,16,34,18],[302,18,34,20,"IconNamePropType"],[302,34,32,24],[303,0,35,10,"iconSize"],[303,8,35,10,"iconSize"],[303,16,35,18],[303,18,35,20,"PropTypes"],[303,37,35,30,"number"],[303,43,32,24],[304,0,36,10,"iconColor"],[304,8,36,10,"iconColor"],[304,17,36,19],[304,19,36,21,"PropTypes"],[304,38,36,31,"oneOfType"],[304,47,36,21],[304,48,36,41],[304,49,36,42,"PropTypes"],[304,68,36,52,"string"],[304,74,36,41],[304,76,36,60,"PropTypes"],[304,95,36,70,"number"],[304,101,36,41],[304,102,36,21],[304,103,32,24],[305,0,37,10,"show"],[305,8,37,10,"show"],[305,12,37,14],[305,14,37,16,"PropTypes"],[305,33,37,26,"oneOf"],[305,38,37,16],[305,39,37,32],[305,40,37,33],[305,48,37,32],[305,50,37,43],[305,58,37,32],[305,60,37,53],[305,67,37,32],[305,68,37,16],[305,69,32,24],[306,0,38,10,"showWithText"],[306,8,38,10,"showWithText"],[306,20,38,22],[306,22,38,24,"PropTypes"],[306,41,38,34,"bool"],[307,0,32,24],[307,7,32,8],[307,8,31,15],[307,9,27,23],[308,0,41,6,"iconSize"],[308,6,41,6,"iconSize"],[308,14,41,14],[308,16,41,16,"PropTypes"],[308,35,41,26,"number"],[308,41,27,23],[309,0,42,6,"iconColor"],[309,6,42,6,"iconColor"],[309,15,42,15],[309,17,42,17,"PropTypes"],[309,36,42,27,"oneOfType"],[309,45,42,17],[309,46,42,37],[309,47,42,38,"PropTypes"],[309,66,42,48,"string"],[309,72,42,37],[309,74,42,56,"PropTypes"],[309,93,42,66,"number"],[309,99,42,37],[309,100,42,17],[309,101,27,23],[310,0,43,6,"titleColor"],[310,6,43,6,"titleColor"],[310,16,43,16],[310,18,43,18,"PropTypes"],[310,37,43,28,"oneOfType"],[310,46,43,18],[310,47,43,38],[310,48,43,39,"PropTypes"],[310,67,43,49,"string"],[310,73,43,38],[310,75,43,57,"PropTypes"],[310,94,43,67,"number"],[310,100,43,38],[310,101,43,18],[311,0,27,23],[311,5,26,2],[311,14,46,11,"defaultProps"],[311,26,26,2],[311,29,46,26],[312,0,47,6,"iconSize"],[312,6,47,6,"iconSize"],[312,14,47,14],[312,16,47,16],[313,0,46,26],[313,5,26,2],[314,0,145,1]]},"type":"js/module"}]}